наброски диплома


введение
есть задача принятия решений, и много способов ее решить.

один из способов - использует чебышевскую лог метрику, поэтому удобно рассматривать в максалгебре.
для решения нужны операции с матрицами и операции которые неприятно делать руками, поэтому я написал несколько классов в с++, которые позволяют решать различные задачи с помощью максалгебры.

наопределеять все (операции в максалгебре, свойства...)

проделанная работа (акцент на максумножить алгебре)
класс чисел, который позволяет без потери точности хранить числа вида (a/b)^(1/n) a, b, n - целые, b!=0

реализованы методы умножения (и деления, если умножать на обратный) и нахождения максимума для данных чисел.

так как при умножении матриц числа a и b быстро растут, чтобы класс сохранял применимость при большой размерности задач, класс несколько сложный. так же хотелось бы максимально быструю работу умножения и нахождения маскимума.

потому числа хранятся факторизованными, число n-минимально возможно.

умножение в таком представлении - сложение степеней соответсвующих простых чисел, после приведения к общему n.

если сравнивать с существующими алгоритмами:

ассимтотически скорость умножения лучше - алгоритм фюрера построенный в 2007 году
{\displaystyle O(n\log n\cdot 2^{O(\log ^{*}n)})} при этом алгоритм фюрера становится выгоднее других при очень больших перемножаемых числах (больше 10 000 000 000 000[3] значащих цифр).
но я не учитываю время факторизации чисел.

узнать, когда мой умножает быстрее чем (сравнить с чем-то)


но это не считая время на факторизацию чисел вначале. я могу это оправдать тем, что в задаче даются небольшие числа, которые легко факторизуются, а в ходе решения числа становятся огромными, поэтому проблема факторизации больших чисел не встает.


храня таким образом числа, сложно искать сумму, но это и не нужно, нужен только максимум.

его тоже сложно искать, но проще, результат операции - один из операндов, надо только выбрать.

можно поделить один на другой и сравнить с единицей........
но это долгий способ.

перед его применением можно оценить какое число больше, например посчитав их логарифмы, это легко: формула суммы логарифмов простых чисел умноженных на их степень....

и надо знать на сколько это точная оценка, чтобы понимать, когда применять медленное сравнение. для этого я ....






так же плюсом такого представления является то, что в максалгебре не появится новых простых чисел во время решения задачи. так как все операции замкнуты где-то.


использовались алгоритм Sieve of Pritchard для нахождения простых.
паттерн програмирования синглтон для генератора простых.

итог

то что я написал позволит решать и другие задачи, использующие максалгебру, например составление планов работ (расписаний)...





слайды Максима
задача
введение алебры и ее свойств
определения
как переопределяется задача
результаты

советы:
конференция "список" конец апреля обязательно выступить
изобразить как можно больше своих результатов (не только 4 курс, а все...)
важнее показать что сделано, а не что планируется
важна компоновка (в каком порядке слайды и термины)
все обозначения должны быть названы (нет просто векторов, т.е. сказать откуда)
во введении предварительно рассказать что будет
определять только то что использую и не слишком рано

equation лучше $$
aligned - группа формул выровненная по знаку

определения могут быть не только в начале (а там где они уместнее)




пустых слайдов быть не должно

спросить вопросы:
введение 3-4 слайда
какую долю от слайдов занимает введение в задачу, а какую - проделанная работа
на сколько мало можно сказать про максалгебру? если я делаю инструмент для испльзования максалгебры, и потом уже пример использования вашего алгоритма решения с моей программой.



когда рассказываю слайды:
я делал
я сделал
я делаю
мы делаем....

что можно в причину написать "появились результаты достойные развития..."

примеров где нужна максумножить с абсолютной точностью (кроме принятия решений)



как рассказать про программу без конкретной задачи

вот есть задача, которая использует максалгебру,
я написал программу которая помогает считать в максалгебре




презентация делается после результата
показать результат

введение делать после результатов

показать через 2 недели что есть (лучше перед этим пару раз поитерировать)

описание алгоритма, пример решения задачи

какие-то фразы Кривулин подскажет, надо обращаться.
чаще присылать результаты!

заранее прислать презентацию и поправить за неделю



сослаться на статью в архиве, запросить ее

расписать алгоритм задачи

разработка программных средств
    что разработано, что использовано
    запросить образец диплома про программу
    состав того что я сделал, что решает.
    алгоритм мой
    сравнить с имеющимися результатами

    пример решения задачи
    одну задачу решить подробно, другие "аналогично"

    суть работы:
    про структуру данных.
    придумал алгоритмы ПС и архитектуру средств, выбор библиотек...
    экспериментальные исследования практическое применение
    
    потом введение.

